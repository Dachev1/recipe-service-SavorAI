package dev.idachev.recipeservice.web.dto;

import com.fasterxml.jackson.annotation.JsonInclude;
import dev.idachev.recipeservice.model.DifficultyLevel;
import io.swagger.v3.oas.annotations.media.Schema;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Map;
import java.util.UUID;

/**
 * Data Transfer Object for recipe responses.
 */
@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
@JsonInclude(JsonInclude.Include.NON_NULL)
@Schema(description = "Recipe data with detailed information returned from API")
public class RecipeResponse {
    // Identifiers
    @Schema(description = "Unique identifier of the recipe")
    private UUID id;
    
    @Schema(description = "ID of the user who created this recipe")
    private UUID createdById;
    
    // Basic information
    @Schema(description = "Recipe title")
    private String title;
    
    @Schema(description = "Serving suggestions")
    private String servingSuggestions;
    
    @Schema(description = "Cooking instructions")
    private String instructions;
    
    @Schema(description = "URL to recipe image")
    private String imageUrl;
    
    @Schema(description = "List of ingredients")
    private List<String> ingredients;
    
    @Schema(description = "Total preparation and cooking time in minutes")
    private Integer totalTimeMinutes;
    
    @Schema(description = "Name of recipe author")
    private String authorName;
    
    @Schema(description = "Username of recipe creator")
    private String username;
    
    @Schema(description = "ID of recipe author")
    private String authorId;
    
    @Schema(description = "Recipe difficulty level")
    private DifficultyLevel difficulty;
    
    @Schema(description = "Whether this recipe was generated by AI")
    private Boolean isAiGenerated;
    
    // User interaction
    @Schema(description = "Whether current user has favorited this recipe")
    private Boolean isFavorite;
    
    @Schema(description = "Number of users who favorited this recipe")
    private Long favoriteCount;
    
    @Schema(description = "Number of comments")
    private Long commentCount;
    
    @Schema(description = "Number of upvotes")
    private Integer upvotes;
    
    @Schema(description = "Number of downvotes")
    private Integer downvotes;
    
    @Schema(description = "Current user's vote")
    private String userVote;
    
    @Schema(description = "Creation timestamp")
    private LocalDateTime createdAt;
    
    @Schema(description = "Last update timestamp")
    private LocalDateTime updatedAt;
    
    @Schema(description = "Nutritional information")
    private MacrosDto macros;
    
    @Schema(description = "Additional fields for frontend compatibility", hidden = true)
    private Map<String, Object> additionalFields;
} 